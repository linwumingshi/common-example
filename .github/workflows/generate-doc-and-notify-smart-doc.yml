name: Run Plugin

on:
  repository_dispatch:
    types: [run-plugin]

jobs:
  use-artifact:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Set Artifact URL
      - name: Set Artifact URL
        run: |
          ARTIFACT_ID="${{ github.event.client_payload.artifact_id }}"
          if [ -z "$ARTIFACT_ID" ]; then
            echo "Error: ARTIFACT_ID is not set."
            exit 1
          fi
          ARTIFACT_URL="https://api.github.com/repos/linwumingshi/common/actions/artifacts/${ARTIFACT_ID}/zip"
          echo "artifact_url=$ARTIFACT_URL" >> $GITHUB_ENV

      # Step 2: Download Artifact
      - name: Download Artifact
        run: |
          echo "Downloading artifact from ${{ env.artifact_url }}"
          curl -L -o smart-doc-source.zip -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "${{ env.artifact_url }}"
          echo "File details:"
          file smart-doc-source.zip
          echo "File size:"
          ls -lh smart-doc-source.zip

      # Step 3: Checkout Plugin Repository
      - name: Checkout Plugin Repository
        uses: actions/checkout@v4

      # Step 4: Set up JDK 11
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      # Step 5: Create Directory for Unzipping
      - name: Create Directory for Unzipping
        run: mkdir -p ~/.m2/repository/com/github/linwumingshi

      # Step 6: Check if file exists
      - name: Check if file exists
        run: |
          if [ -f smart-doc-source.zip ]; then
            echo "File exists."
          else
            echo "File does not exist."
            exit 1
          fi

      # Step 7: List directory
      - name: List directory
        run: ls -lh

      # Step 8: Unzip Artifact
      - name: Unzip Artifact
        run: |
          echo "Unzipping artifact..."
          unzip -d ~/.m2/repository/com/github/linwumingshi smart-doc-source.zip || (echo "Unzip failed, printing file content:" && cat smart-doc-source.zip && exit 1)

      # Step 9: Set up Maven
      - name: Set up Maven
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          maven-version: '3.8.6'

      # Step 10: Build and Install Plugin
      - name: Build and Install Plugin
        run: mvn install
